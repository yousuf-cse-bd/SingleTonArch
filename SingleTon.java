package SingleTonArch;import org.jetbrains.annotations.Contract;import org.jetbrains.annotations.NotNull;/** * Application: There are maybe many printers in a system, * but there should be only one printer spooler object is created. */final public class SingleTon {    private int number;    private final static SingleTon singleTonInstance = new SingleTon();    private SingleTon(){ /*Make sure the constructor is private, prevent object creation*/        number = 0;    }    public void setNumber(int number) {        this.number = number;    }    public int getNumber() {        return number;    }    @NotNull    @Contract(pure = true)    @Override    public String toString(){        return number+" ";    }    public static SingleTon getInstance() {        return singleTonInstance;    }}